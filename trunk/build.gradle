/**
 * Gradle 1.5 build script.
 * 
 * Custom gradle tasks:
 *   zip     - Builds the BeanIO zip distribution
 *   site    - Builds the BeanIO site distribution
 * 
 * See the following URL for instructions regarding deployment to the Sonatype Maven repo:
 *   https://docs.sonatype.org/display/Repository/Sonatype+OSS+Maven+Repository+Usage+Guide
 * 
 * BeanIO is built using JDK1.6 or higher.  If using JDK1.5, the following additional
 * dependencies may be necessary:
 *   - jsr173 1.0 API (required for compilation and test execution)
 *   - sjsxp 1.0.x or equivalent JSR-173 implementation (required for test execution)
 */

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'osgi'
apply plugin: 'maven'
apply plugin: 'signing'
apply from: 'https://raw.github.com/breskeby/gradleplugins/master/emmaPlugin/emma.gradle'

group = "org.beanio"
ext.artifactId = "beanio"
version = "2.1.0.M1"
sourceCompatibility = 1.5
targetCompatibility = 1.5

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'org.springframework.batch', name: 'spring-batch-core', version: '2.1.9.RELEASE'
    compile group: 'org.ow2.asm', name: 'asm', version: '4.0'
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile group: 'org.codehaus.groovy', name: 'groovy-all', version: '1.8.9'
    testRuntime group: 'commons-logging', name: 'commons-logging', version: '1.1.2'
    emma group: 'emma', name: 'emma', version: '2.0.5312'
    emma group: 'emma', name: 'emma', version: '2.0.5312' 
}

sourceSets {
    main {
        java {
            srcDir 'src'
        }
        resources {
            srcDir 'src'
            exclude '**/*.java'
            exclude '**/package.html'
        }
    }
    test {
        java {
            srcDir 'test'
            include '**/*.java'
        }
        groovy {
            srcDir 'test'
            include '**/*.groovy'
        }
        resources {
            srcDir 'test'
            exclude '**/*.java'
            exclude '**/*.groovy'
        }
    }
}

javadoc {
    options.header = "BeanIO $version"
    options.docTitle = "<h2>BeanIO 2.1 API</h2>"
    options.footer = "<i>Copyright &copy; 2010-2013 Kevin Seim</i>"
    options.links = [
        "http://download.oracle.com/javase/6/docs/api/",
        "http://static.springsource.org/spring-batch/apidocs/",
        "http://static.springsource.org/spring/docs/2.5.x/api/"
    ]
}

jar {
    baseName = "$artifactId"
    includeEmptyDirs = false
    ext.metaInfDir = "$buildDir/tmp/jar"
    manifest {
        attributes(
            "Implementation-Title": "BeanIO ${version}",
            "Implementation-Version": version,
            "Bundle-Name": "BeanIO",
            "Bundle-SymbolicName": "org.beanio",
            "Bundle-Vendor": "Kevin Seim",
            "Bundle-Description": "BeanIO OSGi support",
            "Bundle-License": "http://www.apache.org/licenses/LICENSE-2.0",
            "Bundle-DocURL": "http://beanio.org",
            "Import-Package": "",
            "DynamicImport-Package": "*")
    }
    doLast {
        manifest.writeTo("$metaInfDir/MANIFEST.MF")
        project.ant {
            taskdef name: "jarjar", classname: "com.tonicsystems.jarjar.JarJarTask", classpath: "lib/jarjar-1.3.jar"
            jarjar(jarfile: "$buildDir/libs/${baseName}-${version}.jar", manifest: "$metaInfDir/MANIFEST.MF") {
                fileset(dir: "$sourceSets.main.output.classesDir")
                fileset(dir: "$sourceSets.main.output.resourcesDir")
                metainf(dir: "$projectDir") {
                    include(name: "LICENSE.txt")
                    include(name: "LICENSE-ASM.txt")
                    include(name: "NOTICE.txt")
                }
                configurations.compile.files { dep -> dep.name == 'asm' }.each { file -> zipfileset(src: file) }
                rule pattern: "org.objectweb.asm.**", result: "org.beanio.internal.asm.@1"
            }
        }
    }
}

task sourcesJar(type: Jar, dependsOn:classes) {
    baseName = "$artifactId"
    classifier = 'sources'
    from("$projectDir/src") {
        exclude '**/package.html'
    }
    manifest {
        attributes(
            "Implementation-Title": "BeanIO ${version}",
            "Implementation-Version": version
        )
    }
    metaInf {
        from("$projectDir") {
            include "LICENSE.txt"
            include "NOTICE.txt"
        }
    }
}

task javadocJar(type: Jar, dependsOn:javadoc) {
    baseName = "$artifactId"
    classifier = 'javadoc'
    from javadoc.destinationDir
    manifest {
        attributes(
            "Implementation-Title": "BeanIO ${version}",
            "Implementation-Version": version
        )
    }
    metaInf {
        from("$projectDir") {
            include "LICENSE.txt"
            include "NOTICE.txt"
        }
    }
}

task zip(type: Zip, dependsOn: [javadoc, jar] ) {
    baseName = "$artifactId"
    from jar.archivePath
    from(javadoc.destinationDir) {
        into "docs/api"
    }
    from("$projectDir") {
        include "docs/**"
        include "src/**"
        include "test/**"
        include "*.txt"
        include "*.xml"
        include "*.properties"
        include "build.gradle"
    }
}

artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signPom(deployment) }
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }
            pom.project {
               name 'BeanIO'
               artifactId '$artifactId'
               packaging 'jar'
               description 'A Java un/marshalling library for CSV, XML, delimited and fixed length stream formats.'
               url 'http://beanio.org/'
               scm {
                   url 'http://beanio.googlecode.com/svn'
                   connection 'scm:svn:http://beanio.googlecode.com/svn/trunk'
                   developerConnection 'scm:svn:https://beanio.googlecode.com/svn/trunk'
               }
               licenses {
                   license {
                       name 'The Apache Software License, Version 2.0'
                       url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                       distribution 'repo'
                   }
               }
               developers {
                   developer {
                       id 'kevinseim'
                       name 'Kevin Seim'
                   }
               }
           }
        }
    }
}