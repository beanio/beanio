<?xml version="1.0" encoding="UTF-8"?>
<!-- 
    Copyright 2010-2011 Kevin Seim

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
-->
<schema 
  xmlns="http://www.w3.org/2001/XMLSchema" 
  xmlns:tns="http://www.beanio.org/2011/01" 
  xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
  elementFormDefault="qualified" 
  targetNamespace="http://www.beanio.org/2011/01"
  version="2.0">
  
  <element name="beanio">
    <complexType>
      <sequence>
        <element name="typeHandler" minOccurs="0" maxOccurs="unbounded" type="tns:TypeHandler" />
        <element name="stream" minOccurs="1" maxOccurs="unbounded" type="tns:Stream" />
      </sequence>
    </complexType>
  </element>
  
  <complexType name="Stream">
    <sequence>
      <element name="reader" minOccurs="0" maxOccurs="1" type="tns:Factory" />
      <element name="writer" minOccurs="0" maxOccurs="1" type="tns:WriterFactory" />
      <element name="typeHandler" minOccurs="0" maxOccurs="unbounded" type="tns:TypeHandler" />
      <choice minOccurs="1" maxOccurs="unbounded">
        <element name="record" type="tns:Record"/>
        <element name="group" type="tns:Group"/>
      </choice>
    </sequence>
    <attribute name="name" type="xsd:string" use="required" />
    <attribute name="format" type="xsd:string" use="required" />
    <attribute name="ordered" type="xsd:boolean" use="optional" />
    <attribute name="minOccurs" type="xsd:nonNegativeInteger" use="optional" />
    <attribute name="maxOccurs" type="tns:limit" use="optional" />
    <attribute name="resourceBundle" type="xsd:string" use="optional" />
    <attribute name="xmlType" type="xsd:string" use="optional" />
    <attribute name="xmlName" type="xsd:string" use="optional" />
    <attribute name="xmlNamespace" type="xsd:string" use="optional" />
    <attribute name="xmlPrefix" type="xsd:string" use="optional" />
   </complexType>

  <complexType name="TypeHandler">
    <sequence>
      <element name="property" minOccurs="0" maxOccurs="unbounded" type="tns:Property" />
    </sequence>
    <attribute name="name" type="xsd:string" use="optional" />
    <attribute name="type" type="xsd:string" use="optional" />
    <attribute name="class" type="xsd:string" use="required" />
  </complexType>

  <complexType name="Factory">
    <sequence>
      <element name="property" minOccurs="0" maxOccurs="unbounded" type="tns:Property" />
    </sequence>
    <attribute name="class" type="xsd:string" use="optional" />
  </complexType>

  <complexType name="WriterFactory">
    <complexContent>
      <extension base="tns:Factory">
        <sequence>
          <element name="namespace" minOccurs="0" maxOccurs="unbounded" type="tns:Namespace" />
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  
  <complexType name="Namespace">
    <attribute name="prefix" type="xsd:string" use="required" />
    <attribute name="uri" type="xsd:string" use="required" />
  </complexType>

  <complexType name="Property">
    <attribute name="name" type="xsd:string" use="required" />
    <attribute name="value" type="xsd:string" use="required" />
  </complexType>
  
  <attributeGroup name="NodeAttributes">
    <attribute name="minOccurs" type="xsd:nonNegativeInteger" use="optional" default="1" />
    <attribute name="maxOccurs" type="tns:limit" use="optional" />
    <attribute name="order" type="xsd:positiveInteger" use="optional" />  
    <attribute name="xmlName" type="xsd:string" use="optional" />
    <attribute name="xmlNamespace" type="xsd:string" use="optional" />
    <attribute name="xmlPrefix" type="xsd:string" use="optional" />
  </attributeGroup>
  
  <complexType name="Record">
    <choice minOccurs="0" maxOccurs="unbounded">
      <element name="field" minOccurs="0" maxOccurs="unbounded" type="tns:Field" />
      <element name="bean" minOccurs="0" maxOccurs="unbounded" type="tns:Bean" />
    </choice>
    <attribute name="name" type="xsd:string" use="required" />
    <attribute name="minLength" type="xsd:nonNegativeInteger" use="optional" />
    <attribute name="maxLength" type="tns:limit" use="optional" />    
    <attribute name="class" type="xsd:string" use="optional" />
    <attributeGroup ref="tns:NodeAttributes" />
  </complexType>
  
  <complexType name="Group">
    <choice minOccurs="1" maxOccurs="unbounded">
      <element name="record" type="tns:Record" />
      <element name="group" type="tns:Group" />
    </choice>
    <attribute name="name" type="xsd:string" use="required" />
    <attribute name="xmlType" type="xsd:string" use="optional" />
    <attributeGroup ref="tns:NodeAttributes" />
  </complexType>
  
  <complexType name="Field">
    <attribute name="name" type="xsd:string" use="required" />
    <attribute name="setter" type="xsd:string" use="optional" />
    <attribute name="getter" type="xsd:string" use="optional" />  
    <attribute name="rid" type="xsd:boolean" use="optional" />
    <attribute name="position" type="xsd:int" use="optional" />
    <attribute name="required" type="xsd:boolean" use="optional" />
    <attribute name="default" type="xsd:string" use="optional" />
    <attribute name="minLength" type="xsd:nonNegativeInteger" use="optional" />
    <attribute name="maxLength" type="tns:limit" use="optional" />     
    <attribute name="regex" type="xsd:string" use="optional" />
    <attribute name="literal" type="xsd:string" use="optional" /> 
    <attribute name="type" type="xsd:string" use="optional" />
    <attribute name="typeHandler" type="xsd:string" use="optional" />
    <attribute name="format" type="xsd:string" use="optional" />
    <attribute name="ignore" type="xsd:boolean" use="optional" />
    <attribute name="trim" type="xsd:boolean" use="optional" />
    <attribute name="length" type="xsd:positiveInteger" use="optional" />
    <attribute name="padding" type="tns:character" use="optional" />
    <attribute name="justify" type="tns:justification" use="optional" />
    <attribute name="collection" type="xsd:string" use="optional" />
    <attribute name="minOccurs" type="xsd:nonNegativeInteger" use="optional" />
    <attribute name="maxOccurs" type="tns:limit" use="optional" />
    <attribute name="xmlType" type="xsd:string" use="optional" />
    <attribute name="xmlName" type="xsd:string" use="optional" />
    <attribute name="xmlNamespace" type="xsd:string" use="optional" />
    <attribute name="xmlPrefix" type="xsd:string" use="optional" />
    <attribute name="nillable" type="xsd:boolean" use="optional" />
  </complexType>  

  <complexType name="Bean">    
    <choice minOccurs="1" maxOccurs="unbounded">
      <element name="field" minOccurs="0" maxOccurs="unbounded" type="tns:Field" />
      <element name="bean" minOccurs="0" maxOccurs="unbounded" type="tns:Bean" />
    </choice>
    <attribute name="name" type="xsd:string" use="required" />
    <attribute name="setter" type="xsd:string" use="optional" />
    <attribute name="getter" type="xsd:string" use="optional" />  
    <attribute name="class" type="xsd:string" use="optional" />
    <attribute name="collection" type="xsd:string" use="optional" />
    <attribute name="minOccurs" type="xsd:nonNegativeInteger" use="optional" />
    <attribute name="maxOccurs" type="tns:limit" use="optional" />
    <attribute name="xmlType" type="xsd:string" use="optional" />
    <attribute name="xmlName" type="xsd:string" use="optional" />
    <attribute name="xmlNamespace" type="xsd:string" use="optional" />
    <attribute name="xmlPrefix" type="xsd:string" use="optional" />
    <attribute name="nillable" type="xsd:boolean" use="optional" />
  </complexType>
  
  <simpleType name="justification">
    <restriction base="xsd:string">
      <enumeration value="left"/>
      <enumeration value="right"/>
    </restriction>
  </simpleType>
  
  <simpleType name="limit">
    <union memberTypes="xsd:nonNegativeInteger">
      <simpleType>
        <restriction base="xsd:NMTOKEN">
          <enumeration value="unbounded"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <simpleType name="character">
    <restriction base="xsd:string">
      <length value="1" fixed="true" />
    </restriction>  
  </simpleType>

</schema>